\author{Moreno Bevilacqua, \email{moreno.bevilacqua@uv.cl},\url{https://sites.google.com/a/uv.cl/moreno-bevilacqua/home},
Víctor Morales Oñate, \email{victor.morales@uv.cl}, \url{https://sites.google.com/site/moralesonatevictor/}
}
\examples{
library(GeoModels)
library(fields)
library(hypergeo)
################################################################
############### Examples of Spatial kriging  ###################
################################################################
# Define the spatial-coordinates of the points:
set.seed(79)
x = runif(200, 0, 1)
y = runif(200, 0, 1)
coords=cbind(x,y)
# Set the exponential cov parameters:
corrmodel_1 = "exponential"
mean=0
sill=1
nugget=0
scale=0.3/3
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale)
# Set the wendland parameters (two compatible correlations):
corrmodel_2 = "Wend0"
mean=0
sill=1
nugget=0
power2=3
c_supp=0.3
param_wen=list(mean=mean,sill=sill,nugget=nugget,scale=c_supp,power2=power2)
# Simulation of the spatial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel=corrmodel_1,
param=param)$data
# locations to predict
xx=seq(0,1,0.025)
loc_to_pred=as.matrix(expand.grid(xx,xx))
################################################################
###
### Example 1. Spatial simple kriging of n sites of a
### Gaussian random fields with exponential correlation.
###
###############################################################
pr=GeoKrig(loc=loc_to_pred,coordx=coords,corrmodel=corrmodel_1,
param= param, data=data,mse=TRUE)
################################################################
###
### Example 3. Spatial  simple kriging of n sites of a
### Gaussian random fields using a compatible Wendland model
###
###############################################################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=power2)
pr_wen=GeoKrig(loc=loc_to_pred,coordx=coords,corrmodel=corrmodel_2,data=data,
param=param_wen,sparse=TRUE,mse=TRUE)
colour = rainbow(100)
par(mfrow=c(2,2))
zlim=c(-2.6,2.6)
# simple kriging map prediction
image.plot(xx, xx, matrix(pr$pred,ncol=length(xx)),col=colour,
zlim=zlim,xlab="",ylab="",
main="Simple Kriging with  exponential model ")
# simple kriging MSE map prediction variance
image.plot(xx, xx, matrix(pr$mse,ncol=length(xx)),col=colour,
xlab="",ylab="",main="Std error")
# simple  kriging map prediction
image.plot(xx, xx, matrix(pr_wen$pred,ncol=length(xx)),col=colour,
zlim=zlim,xlab="",ylab="",main="Simple Kriging with Wendland model")
# simple kriging MSE map prediction variance
image.plot(xx, xx, matrix(pr_wen$mse,ncol=length(xx)),col=colour,
xlab="",ylab="",main="Std error")
################################################################
###
### Example 4. Spatial  simple kriging of a binomial
###            random field
###
###############################################################
set.seed(312)
model="Binomial";n=6
# Define the spatial-coordinates of the points:
x = runif(800)
y = runif(800)
coords=cbind(x,y)
#### mean and covariance parameters ###
mean=0
sill=1
nugget=0
scale=0.2
#################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=4)
# Simulation of the Binomial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param=param)$data
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(x, y, data,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n), main="Data")
## estimation with pairwise likelihood
fixed=list(nugget=nugget,power2=4,sill=1)
start=list(mean=0,scale=scale)
# Maximum pairwise likelihood fitting :
fit = GeoFit(data, coordx=coords, corrmodel="Wend0",model=model,n=n,
likelihood='Marginal', type='Pairwise',maxdist=0.03,
optimizer="BFGS", start=start,fixed=fixed)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
## simple kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param= as.list(c(fit$param,fixed)))
#standard   binomial kriging
map_binom=matrix(round(pr$pred),ncol=length(xx))
image.plot(xx, xx, map_binom,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,col=rainbow(n+1),#zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
###############################################################
set.seed(312)
model="Binomial";n=6
# Define the spatial-coordinates of the points:
x = runif(800)
y = runif(800)
coords=cbind(x,y)
#### mean and covariance parameters ###
mean=0
sill=1
nugget=0
scale=0.2
#################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=4)
# Simulation of the Binomial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param=param)$data
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(x, y, data,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n), main="Data")
## estimation with pairwise likelihood
fixed=list(nugget=nugget,power2=4,sill=1)
start=list(mean=0,scale=scale)
# Maximum pairwise likelihood fitting :
fit = GeoFit(data, coordx=coords, corrmodel="Wend0",model=model,n=n,
likelihood='Marginal', type='Pairwise',maxdist=0.03,
optimizer="BFGS", start=start,fixed=fixed)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
## simple kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param= as.list(c(fit$param,fixed)))
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,col=rainbow(n+1),#zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
################################################################
###
### Example 4. Spatial  simple kriging of a binomial
###            random field
###
###############################################################
set.seed(312)
model="Binomial";n=6
# Define the spatial-coordinates of the points:
x = runif(800)
y = runif(800)
coords=cbind(x,y)
#### mean and covariance parameters ###
mean=0
sill=1
nugget=0
scale=0.2
#################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=4)
# Simulation of the Binomial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param=param)$data
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(x, y, data,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n), main="Data")
## estimation with pairwise likelihood
fixed=list(nugget=nugget,power2=4,sill=1)
start=list(mean=0,scale=scale)
# Maximum pairwise likelihood fitting :
fit = GeoFit(data, coordx=coords, corrmodel="Wend0",model=model,n=n,
likelihood='Marginal', type='Pairwise',maxdist=0.03,
optimizer="BFGS", start=start,fixed=fixed)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
## simple kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param= as.list(c(fit$param,fixed)))
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,
xlab="",ylab="",main="Simple Kriging ")
###############################################################
set.seed(312)
model="Binomial";n=6
# Define the spatial-coordinates of the points:
x = runif(800)
y = runif(800)
coords=cbind(x,y)
#### mean and covariance parameters ###
mean=0
sill=1
nugget=0
scale=0.2
#################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=4)
# Simulation of the Binomial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param=param)$data
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(x, y, data,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n), main="Data")
## estimation with pairwise likelihood
fixed=list(nugget=nugget,power2=4,sill=1)
start=list(mean=0,scale=scale)
# Maximum pairwise likelihood fitting :
fit = GeoFit(data, coordx=coords, corrmodel="Wend0",model=model,n=n,
likelihood='Marginal', type='Pairwise',maxdist=0.03,
optimizer="BFGS", start=start,fixed=fixed)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
## simple kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param= as.list(c(fit$param,fixed)))
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,col=rainbow(n+1),#zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
###############################################################
set.seed(312)
model="Binomial";n=6
# Define the spatial-coordinates of the points:
x = runif(800)
y = runif(800)
coords=cbind(x,y)
#### mean and covariance parameters ###
mean=0
sill=1
nugget=0
scale=0.2
#################
param=list(mean=mean,sill=sill,nugget=nugget,scale=scale,power2=4)
# Simulation of the Binomial Gaussian random field:
data = GeoSim(coordx=coords, corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param=param)$data
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(x, y, data,nlevel=n+1,col=rainbow(n+1),zlim=c(0,n), main="Data")
## estimation with pairwise likelihood
fixed=list(nugget=nugget,power2=4,sill=1)
start=list(mean=0,scale=scale)
# Maximum pairwise likelihood fitting :
fit = GeoFit(data, coordx=coords, corrmodel="Wend0",model=model,n=n,
likelihood='Marginal', type='Pairwise',maxdist=0.03,
optimizer="BFGS", start=start,fixed=fixed)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
## simple kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,n=n,
sparse=TRUE,param= as.list(c(fit$param,fixed)))
#standard   binomial kriging
map_binom=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_binom,col=rainbow(n+1),zlim=c(0,n),
xlab="",ylab="",main="Simple Kriging ")
pr$pred
###############################################################
set.seed(312)
model="Weibull"
corrmodel = "GenWend"
# Define the spatial-coordinates of the points:
NN=800
coords=cbind(runif(NN),runif(NN))
## matrix covariates
a0=rep(1,NN)
a1=runif(NN,-1,1)
X=cbind(a0,a1)
# Set model parameters
shape=2
## regression parameters
mean = 1
mean1= -0.2
# correlation parameters
sill = 1
nugget = 0
power2=4
scale = 0.3
smooth=0
## simulation
param=list(shape=shape,nugget=nugget,mean=mean,mean1=mean1,
scale=scale,sill=sill,power2=power2,smooth=smooth)
data = GeoSim(coordx=coords,corrmodel=corrmodel, param=param,
model=model,sparse=TRUE,X=X)$data
#####starting and fixed parameters
fixed=list(nugget=nugget,power2=power2,smooth=smooth,sill=sill)
start=list(mean=mean,mean1=mean1, scale=scale,shape=shape)
## estimation with pairwise likelihood
maxdist=0.1
fit2 = GeoFit(data=data,coordx=coords,corrmodel=corrmodel,X=X,
maxdist=maxdist,likelihood="Marginal",type="Pairwise",
optimizer="BFGS",start=start,fixed=fixed, model = model)
## obtaining residuals
res=GeoResiduals(fit2)
# locations to predict
xx=seq(0,1,0.025)
loc_to_pred=as.matrix(expand.grid(xx,xx))
#optimal linear  kriging for residuals
pr=GeoKrig(data=res$data, coordx=coords,loc=loc_to_pred,corrmodel=corrmodel,model=model,mse=TRUE,
sparse=TRUE,param=as.list(c(res$param,res$fixed)))
# locations to predict
xx=seq(0,1,0.025)
loc_to_pred=as.matrix(expand.grid(xx,xx))
#optimal linear  kriging for residuals
pr=GeoKrig(data=res$data, coordx=coords,loc=loc_to_pred,corrmodel=corrmodel,model=model,mse=TRUE,
sparse=TRUE,param=as.list(c(res$param,res$fixed)))
## map of residuals
par(mfrow=c(1,3))
quilt.plot(coords,res$data,main="Residuals")
map=matrix(pr$pred,ncol=length(xx))
mapmse=matrix(pr$mse,ncol=length(xx))
image.plot(xx, xx, map,
xlab="",ylab="",main="Residuals Kriging ")
image.plot(xx, xx, mapmse,
xlab="",ylab="",main="Simple Kriging ")
################################################################
###
### Example 5. Spatial  simple kriging of a t
###            random field
###
###############################################################
###############################################################
model="StudentT"
df=7
corrmodel = "Wend0"
nsel=700
coords=cbind(runif(nsel),runif(nsel))
mean = 0
sill = 1
nugget = 0
power2=4
scale = 0.2
# Starting value for the estimated parameters
set.seed(3132)
param=list(nugget=nugget,mean=mean, scale=scale,sill=sill,df=1/df,power2=power2)
data = GeoSim(coordx=coords,corrmodel=corrmodel, param=param,
model=model,sparse=TRUE)$data
fixed=list(nugget=nugget,power2=4,df=1/df)
start=list(mean=mean, scale=scale,sill=sill)
I=Inf
upper=list(mean=I, scale=I,sill=I)
lower=list(mean=-I, scale=0,sill=0)
# Maximum pairwise composite-likelihood fitting of the RF:
fit = GeoFit(data=data,coordx=coords,corrmodel=corrmodel,
maxdist=0.03,likelihood="Marginal",type="Pairwise",
lower=lower,upper=upper,
optimizer="nlminb", start=start,fixed=fixed, model = model)
# locations to predict
xx=seq(0,1,0.03)
loc_to_pred=as.matrix(expand.grid(xx,xx))
#optimal linear  kriging
pr=GeoKrig(data=data, coordx=coords,loc=loc_to_pred,corrmodel="Wend0",model=model,
sparse=TRUE,param= as.list(c(fit$param,fit$fixed)))
par(mfrow=c(1,2))
#### map of simulated data
quilt.plot(coords[,1], coords[,2], data, main="Data")
map_t=matrix(pr$pred,ncol=length(xx))
image.plot(xx, xx, map_t,
xlab="",ylab="",main="Simple Kriging ")
# Define the spatial-coordinates of the points:
x = runif(80, 0, 1)
y = runif(80, 0, 1)
coords=cbind(x,y)
times=1:8
# Define model correlation and associated parameters
corrmodel="exp_exp"
param=list(nugget=0,mean=0,scale_s=0.2/3,scale_t=1,sill=1)
# Simulation of the space time Gaussian random field:
set.seed(31)
data=GeoSim(coordx=coords,coordt=times,corrmodel=corrmodel,
param=param)$data
# Maximum pairwise likelihood fitting of the space time random field:
start = list(scale_s=0.2/3,scale_t=1,sill=1,mean=0)
fixed = list(nugget=0)
I=Inf
lower=list(scale_s=0,scale_t=0,sill=0,mean=-I)
upper=list(scale_s=I,scale_t=I,sill=I,mean=I)
fit = GeoFit(data, coordx=coords, coordt=times, model=model, corrmodel=corrmodel,
likelihood='Marginal', type='Pairwise',start=start,fixed=fixed,
optimizer="nlminb", maxdist=0.1,maxtime=1)
################################################################
###
### Example 6. Spatio temporal simple kriging of n locations
### sites and m temporal instants for a Gaussian random fields
### with estimated double exponential correlation.
###
###############################################################
set.seed(3)
param=as.list(c(fit$param,fit$fixed))
# locations to predict
xx=seq(0,1,0.04)
loc_to_pred=as.matrix(expand.grid(xx,xx))
#  Define the times to predict
times_to_pred=1:2
pr=GeoKrig(loc=loc_to_pred,time=times_to_pred,coordx=coords,coordt=times,
corrmodel=corrmodel, param=param,data=data,mse=TRUE)
par(mfrow=c(2,2))
zlim=c(-2.5,2.5)
colour = rainbow(100)
for(i in 1:2) {
image.plot(xx, xx, matrix(pr$pred[i,],ncol=length(xx)),col=colour,
zlim=zlim, main = paste(" Kriging Time=" , i),ylab="")
image.plot(xx, xx, matrix(pr$mse[i,],ncol=length(xx)),col=colour,
main = paste("Std err Time=" , i),ylab="")
}
rm(list=ls())
require(devtools)
#install_github("vmoprojs/GeoModels")
library(GeoModels)
library(spam)
library(fields)
set.seed(3132)
###############################################################
############ Examples of spatial RFs ################
###############################################################
model="TwoPieceBimodal"
maxdist=0.1
corrmodel <- "GenWend"
# Define the spatial-coordinates of the points:
NN=800
coords=cbind(runif(NN),runif(NN))
#x=y=seq(0,1,0.04);coords=as.matrix(expand.grid(x,y));nrow(coords)
maxdist=max(dist(coords))
skew=0.25
mean <- 2
sill <- 2.5
nugget <- 0.3
power2=4
scale <- 0.2
smooth=0    #0,1
df=3
param=list(nugget=nugget,mean=mean, scale=scale,sill=sill,power2=power2,smooth=smooth,skew=skew,df=1/df)
# Starting value for the estimated parameters
k=1
GPU = 0
local = c(1,1)
res=NULL;k=1
#while(k<=200){
data <- GeoSim(coordx=coords,corrmodel=corrmodel, param=param,model=model,sparse=TRUE)$data
#cc <- GeoCovmatrix(coordx=coords,corrmodel=corrmodel, param=param,model=model)$covmatrix
#min(eigen(cc)$values)
plot(density(data))
#evariog=GeoVariogram(data=data, coordx=coords,maxdist=maxdist/4)
#plot(evariog$centers,evariog$variograms,pch=20,xlab="distance",ylab="Semi-variogram",ylim=c(0,max(evariog$variograms)+0.2))
#matrix1 <- GeoCovmatrix(coordx=coords, corrmodel=corrmodel,param=param,model=model)$covmatrix
############################################################
I=Inf
optimizer="nlminb"
dd=0.1
fixed<-list(power2=4,smooth=smooth,df=1/df)
start<-list(nugget=nugget,mean=mean,scale=scale,sill=sill,skew=skew)
lower<-list(nugget=0,mean=-I,scale=0,sill=0,skew=-1,df=0)
upper<-list(nugget=1,mean=I,scale=I,sill=I,skew=1,df=1)
fit <- GeoFit(data=data,coordx=coords,corrmodel=corrmodel,
maxdist=dd,likelihood="Marginal",type="Pairwise",
lower=lower,upper=upper,
start=start,fixed=fixed, model = model)
res=rbind(res,fit$param)                 #,GPU=GPU,local=local)
print(k)
k=k+1
}
res=GeoResiduals(fit)
GeoQQ(res)
evariog=GeoVariogram(data=res$data, coordx=coords,maxdist=maxdist/4)
GeoCovariogram(res,show.vario=TRUE, vario=evariog,pch=20)
# locations to predict
xx<-seq(0,1,0.02)
loc_to_pred<-as.matrix(expand.grid(xx,xx))
a=GeoCV(fit, K=10, n.fold=0.1, sparse=TRUE,seed=1)
mean(a$rmse);mean(a$mae);
#optimal linear  kriging
pr<-GeoKrig(data=res$data, coordx=coords,loc=loc_to_pred,corrmodel=corrmodel,model=model,mse=TRUE,
sparse=TRUE,param= as.list(c(res$param,res$fixed)))
par(mfrow=c(1,3))
quilt.plot(coords,res$data)
map=matrix(pr$pred,ncol=length(xx))
mapmse=matrix(pr$mse,ncol=length(xx))
image.plot(xx, xx, map,
xlab="",ylab="",main="Simple Kriging ")
image.plot(xx, xx, mapmse,
xlab="",ylab="",main="Simple Kriging ")
rm( list = ls())
setwd("~/Documents/lavoro/ZZZ_01_04_2020/GeoModels/inst/CL")
archivos <- dir()
i = 36
pos.out <- grep("header",archivos)
f.old <- archivos[pos.out]
file.rename(f.old,paste("header",i,".h",sep = ""))
aa = archivos[-pos.out]
aa
for(jj in aa)
{
latin = readLines(jj,-1)
latin[1]=paste("#include"," \"","header",i,".h","\"",sep = "")
writeLines(latin,jj)
}
